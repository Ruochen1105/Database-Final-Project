init.py: 
	the web application, contains flask to connect the html webpage to MySQL
---------------------------------------------------------------------------------------------------
counter.txt:
	store the last ticket id, which is an integer increased by 1 each time a ticket is bought
---------------------------------------------------------------------------------------------------
Project_3.pdf:
	description of the project
---------------------------------------------------------------------------------------------------
Solution_ProjectPart2_create_tables:
	provided SQL to create tables
---------------------------------------------------------------------------------------------------
static:
	flask's default folder to place static items, used to place the bar chart and pie chart generated by functions in init.py and to be displayed on some webpages
inside the static folder:
	bar.png: bar chart for customers' "view my spending," shoiwng month-wise spending for the last 6 months or a specified range of time
	bar1.png: bar chart for booking agents' "view top customers," customers in x-axis and number of tickets bought in y-axis
	bbbar.png: bar chart for booking agents' "view top customers," customers in x-axis and amount of commission received in y-axis
	barr.png: bar chart for airline staffs' "view reports," month-wise tickets sold for the last year
	bbarr.png: bar chart for airline staffs' "view reports," month-wise tickets sold for the specified range of time
	pie.png: pie chart for ariline staffs' "comparison of revenue earned," comparison for the last month
	piee.png: pie chart for ariline staffs' "comparison of revenue earned," comparison for the last year
---------------------------------------------------------------------------------------------------
templates:
	flask's default folder to place the webpage, used to store the .html files
inside the templates folder:
	CoRE.html: showing the result of airline staffs' "comparison of revenue earned"
	error.html: showing this page whenever the user tries to access some webpages that he doesn't have the permission to
	flights.html: showing the returned flight query result, may have extra functions based on session's "extra" and "identity" (if "extra" is False, will only show flights information; if "extra" is True, will allow customer to purchase tickets and booking agent to purchase tickets for customers) 
	index.html: homepage for the web application when the user is not logged in
	logged_b.html: homepage for booking agents
	logged_c.html: homepage for customers
	logged_s.html: homepage for airline staffs
	login.html: allow the users to choose an identity to log in as
	login_b.html: allow the users to input username and password to log in as a booking agent
	login_c.html: allow the users to input username and password to log in as a customer
	login_s.html: allow the users to input username and password to log in as an ariline staff
	register.html: allow the users to choose an identity to register as
	register_b.html: allow the users to register as a booking agent
	register_c.html: allow the users to register as a customer
	register_s.html: allow the users to register as an airline staff
	TMS.html: showing the result of customers' "track my spending"
	VAtBA.html: showing the result of airline staffs' "view all the booking agents"
	VC.html: showing the result of airline staff's viewing all the customers of a particular flight from the page showing the flight information of his or her airline
	VFC.html: showing the result of airline staff's "view frequent customers"
	VmC.html: showing the result of booking agents' "view my commission"
	VR.html: showing the result of airline staffs' "view reports"
	VTC.html: showing the result of booking agents' "view top customers"
	VTD.html: showing the result of airline staffs' "view top destinations"